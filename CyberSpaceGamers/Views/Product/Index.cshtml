@model CyberSpaceGamers.Models.ViewModels.ProductListViewModel
@{
    ViewData["Title"] = "Products";
    ViewData["ActiveNav"] = "Products";
}

<section class="container">
    <div class="row">
        <!-- Genres -->
        <aside class="col-12 col-md-3 mb-4">
            <div class="card card-dark shadow-sm rounded-3xl">
                <div class="card-header fw-semibold genre-title">Genres</div>
                <div class="list-group list-group-flush list-group-dark">
                    @foreach (var g in Model.Genres)
                    {
                        var selectedGenre = Model.Genre == g ? null : g;
                        <a asp-action="Index" asp-route-genre="@selectedGenre"
                           class="list-group-item list-group-item-action d-flex justify-content-between align-items-center @(Model.Genre == g ? "active" : "")">
                            @g <i class="bi bi-chevron-right"></i>
                        </a>
                    }
                </div>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="col-12 col-md-9">
            <div class="d-flex flex-column flex-md-row gap-2 align-items-stretch align-items-md-center mb-3">
                <form asp-action="Index" method="get" class="flex-grow-1 d-flex gap-2">
                    <input type="hidden" name="genre" value="@Model.Genre" />
                    <input type="hidden" name="page" value="@Model.Page" />
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-search" aria-hidden="true"></i>
                        </span>
                        <input name="search"
                               value="@Model.Search"
                               class="form-control"
                               placeholder="Search games…"
                               aria-label="Search games">
                        
                    </div>

                    <select name="sort" class="form-select" style="max-width: 180px;" aria-label="Sort results">
                        <option>No Filter</option>
                        <option value="priceAsc" selected="@(Model.Sort == "priceAsc")">Price ↑</option>
                        <option value="priceDesc" selected="@(Model.Sort == "priceDesc")">Price ↓</option>
                        <option value="name" selected="@(Model.Sort == "name")">Name</option>
                    </select>
                    <button class="btn btn-primary" type="submit">Apply</button>
                </form>
               
            </div>

            <!-- Product Grid -->
            <div class="row g-3">
                <!--Check if product list exist-->
                @if (Model.Products != null && Model.Products.Any())
                {
                    <!--Loop Through each product in the collection-->
                    @foreach (var p in Model.Products)
                    {
                        <div class="col-12 col-sm-6 col-lg-4">
                            @await Html.PartialAsync("_ProductCard", p)
                        </div>
                    }
                }
                else
                {
                    <!--Display a default message when searched product are not found-->
                    <div class="col-12 text-center py-5">
                        <p class="text-muted">No Games Found</p>
                    </div>
                }
            </div>
            <!-- Pagination navigation section -->
            <nav class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item">
                        <span class="page-link d-flex align-items-center gap-1">
                        @if (Model.Page > 1)
                        {
                            <a  class="page-link d-flex align-items-center gap-1" asp-action="Index" asp-route-page="@(Model.Page - 1)"
                                asp-route-search="@Model.Search" asp-route-sort="@Model.Sort" asp-route-genre="@Model.Genre">
                                ← Previous
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary" disabled>← Previous</button>
                        }
                        </span>
                    </li>

                    <!--Page Number-->
                    <li class="page-item active">
                        <span class="mx-2">Page @Model.Page of @Model.TotalPages</span>
                    </li>

                    <!-- Make Next go to next page-->
                    <li class="page-item">
                        @if (Model.Page < Model.TotalPages)
                        {
                            <a class="page-link d-flex align-items-center gap-1" asp-action="Index" asp-route-page="@(Model.Page +1)"
                            asp-route-search="@Model.Search" asp-route-sort="@Model.Sort" asp-route-genre="@Model.Genre">
                                Next →
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary" disabled>Next →</button>
                        }
                    </li>
                </ul>
            </nav>



        </main>
    </div>
</section>
